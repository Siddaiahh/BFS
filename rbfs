from RMP import dict_gn
from RMP import dict_hm
import queue as Q

start = 'Arad'
goal = 'Sibiu'
result = ' '


def get_fn(citystr):
    cities = citystr.split(',')
    hm = gn = 0
    for ctr in range(0, len(cities) - 1):
        gn = gn + dict_gn[cities[ctr]][cities[ctr + 1]]
    hm = dict_hm[cities[len(cities) - 1]]
    return (hm + gn)


def printout(cityq):
    for i in range(0, cityq.qsize()):
        print(cityq.queue[i])


def expand(cityq):
    global result
    tot, citystr, thiscity = cityq.get()
    print('---', tot, citystr, thiscity, '---')
    nexttot = 999
    if not cityq.empty():
        nexttot, nextcitystr, nextthiscity = cityq.queue[0]
    if thiscity == goal and tot < nexttot:
        result = citystr + '::' + str(tot)
        return
    print('Expanded city------------------', thiscity)
    print('Second best f(n)-----------------', nexttot)
    tempq = Q.PriorityQueue()
    for cty in dict_gn[thiscity]:
        tempq.put((get_fn(citystr + "," + cty), citystr + "," + cty, cty))
    for ctr in range(1, 3):
        ctrtot, ctrcitystr, ctrthiscity = tempq.get()
        if ctrtot < nexttot:
            cityq.put((ctrtot, ctrcitystr, ctrthiscity))
        else:
            cityq.put((ctrtot, citystr, thiscity))
            break
    printout(cityq)
    expand(cityq)


def main():
    cityq = Q.PriorityQueue()
    thiscity = start
    cityq.put((999, 'NA', 'NA'))
    cityq.put((get_fn(start), start, thiscity))
    expand(cityq)
    print('This RBFS path with the total is: ')
    print(result)


main()
